<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>AI Gambar - Deteksi Objek</title>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.9.0"></script>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet@2.1.0"></script>
  <style>
    body { font-family: sans-serif; text-align: center; padding: 30px; }
    img { max-width: 300px; margin-top: 20px; }
    #result { margin-top: 20px; font-size: 20px; }
  </style>
</head>
<body>
  <h1>AI Deteksi Gambar</h1>
  <input type="file" accept="image/*" id="imageInput">
  <br>
  <img id="preview" src="" alt="Preview">
  <div id="result">Hasil deteksi akan muncul di sini...</div>

  <script>
    const imageInput = document.getElementById('imageInput');
    const preview = document.getElementById('preview');
    const result = document.getElementById('result');
    let model;

    // Load model
    mobilenet.load().then(m => {
      model = m;
      result.textContent = "Model siap! Upload gambar.";
    });

    imageInput.addEventListener('change', async () => {
      const file = imageInput.files[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = async () => {
        preview.src = reader.result;
        result.textContent = "Menganalisis gambar...";

        const imgElement = new Image();
        imgElement.src = reader.result;
        imgElement.onload = async () => {
          const predictions = await model.classify(imgElement);
          if (predictions.length > 0) {
            result.innerHTML = `Hasil: <b>${predictions[0].className}</b><br>Probabilitas: ${Math.round(predictions[0].probability * 100)}%`;
          } else {
            result.textContent = "Tidak bisa mengenali gambar.";
          }
        };
      };
      reader.readAsDataURL(file);
    });
  </script>
</body>
</html>
